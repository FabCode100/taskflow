generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Transaction {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  amount      Float    // Pode ser positivo (receita) ou negativo (despesa)
  category    String
  type        String   // "income" ou "expense"
  date        DateTime
  description String?
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  responsavel String?
  user User? @relation(fields: [userId], references: [id])
}

model Goal {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String?
  category     String?      // Categoria da meta, ex: Saúde, Financeiro, Espiritual etc
  responsible  String?      // Responsável, ex: 'mae', 'pai', 'fabricio'
  deadline     DateTime?    // Prazo da meta
  completed    Boolean     @default(false)
  recurring    Boolean     @default(false)  // Meta recorrente? (ex: rotina diária)
  userId       String      @db.ObjectId
  createdAt    DateTime    @default(now())
  
  user         User        @relation(fields: [userId], references: [id])
}


model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String        @unique
  tasks        Task[]        @relation(fields: [], references: [])
  transactions Transaction[] @relation(fields: [], references: [])
  createdAt    DateTime      @default(now())
}

model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      String   @default("pending")
  recurring   Boolean  @default(false)
  tag         String?
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  
  user User? @relation(fields: [userId], references: [id])
}
